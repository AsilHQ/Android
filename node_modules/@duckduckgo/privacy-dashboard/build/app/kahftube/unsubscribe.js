// let isSubscriptionClicked = false;
// let isBttonClicked = false;

// let timer;
// let haramChannel;

// // const id = setInterval(async () => {

// // }, 500);
// console.log("MULALALALALALALALALALALA");

// new MutationObserver(async (mutationList, observer) => {
//   if (!haramChannel) {
//     haramChannel = await window.flutter_inappwebview.callHandler(
//       "getHaramChannel"
//     );
//   }

//   // const tab = document.getElementsByTagName("ytm-pivot-bar-item-renderer");
//   // for (let index = 0; index < tab.length; index++) {
//   //   const element = tab[index];
//   //   if (element?.innerText.includes("Subscriptions")) {
//   //     if (!isSubscriptionClicked) {
//   //       isSubscriptionClicked = true;
//   //       element.children.item(0).click();
//   //     }
//   //   }
//   // }

//   // const channelButton = document.querySelector(
//   //   "a.channel-list-sub-menu-show-all"
//   // );
//   // channelButton?.click();

//   let foundChannel = document.querySelector(
//     `a.compact-media-item-metadata-content[href="${haramChannel["href"]}"]`
//   );
//   foundChannel =
//     foundChannel ??
//     document.querySelector(
//       `a.channel-list-item-link[href="${haramChannel["href"]}"]`
//     );
//   foundChannel?.click();

//   const button = document
//     .querySelector("ytm-subscribe-button-renderer")
//     ?.querySelector("button");

//   // const channelName = document.querySelector("h1.c4-tabbed-header-title");

//   if (button?.classList?.contains("yt-spec-button-shape-next--tonal")) {
//     if (!isBttonClicked) {
//       // console.log("LOL");
//       isBttonClicked = true;
//       button?.click();
//     }
//   }
//   if (
//     isBttonClicked &&
//     button?.classList?.contains("yt-spec-button-shape-next--filled")
//   ) {
//     isBttonClicked = false;
//     // console.log("-------- DONE ---------");
//     haramChannel["isUnsubscribed"] = true;
//     haramChannel = await window.flutter_inappwebview.callHandler(
//       "getHaramChannel",
//       haramChannel
//     );
//     location.href = "https://m.youtube.com/feed/channels";
//   }

//   const unsubscribeButton = document
//     .querySelector("div.dialog-buttons")
//     ?.querySelectorAll("button")[1];
//   if (unsubscribeButton && !haramChannel["isUnsubscribeClicked"]) {
//     // console.log("GONE");
//     unsubscribeButton.click();
//     haramChannel["isUnsubscribeClicked"] = true;
//   }
// }).observe(document, {
//   childList: true,
//   subtree: true,
// });

const innertube_api_key = ytcfg.d().INNERTUBE_API_KEY;

async function sha1(str) {
  const buffer = new TextEncoder().encode(str);
  return crypto.subtle.digest("SHA-1", buffer).then((hash) => {
    return Array.from(new Uint8Array(hash))
      .map((b) => b.toString(16).padStart(2, "0"))
      .join("");
  });
}

async function get_sapisid() {
  //const cookie = await window.flutter_inappwebview.callHandler("getCookie");
  const cookie = await KahfTubeUnsubscribeInterface.getCookies();
  console.log("KahfTubeUnsubscribeInterface:: cookie:",cookie);
  return cookie || "";
}

async function generate_authorization_key() {
  const sapisid = await get_sapisid();
  const date = Math.floor(new Date().getTime() / 1e3);

  const key = await sha1(`${date} ${sapisid} https://www.youtube.com`);

  return `SAPISIDHASH ${date}_${key}`;
}

async function unsubscribe_channel() {
  //const channel_ids = await window.flutter_inappwebview.callHandler("getHaramChannel");
  //const channel_ids = await KahfTubeUnsubscribeInterface.getHaramChannelIds();
  const channel_ids = await JSON.parse(KahfTubeUnsubscribeInterface.getHaramChannelIds());

  //console.log("KahfTubeUnsubscribeInterface:: KahfTubeUnsubscribeInterface.getHaramChannelIds():",KahfTubeUnsubscribeInterface.getHaramChannelIds());
  console.log("KahfTubeUnsubscribeInterface:: channel_ids:",channel_ids);
  //console.log("KahfTubeUnsubscribeInterface:: channel_ids[0]:",channel_ids[0]);
  const authorization = await generate_authorization_key();

  const url = `https://www.youtube.com/youtubei/v1/subscription/unsubscribe?key=${innertube_api_key}&prettyPrint=false`;
  const body = {
    context: {
      client: {
        hl: "en",
        deviceMake: "",
        deviceModel: "",
        clientName: "WEB",
        clientVersion: "2.20230201.01.00",
        osName: "X11",
        osVersion: "",
        originalUrl: `https://www.youtube.com/channel/${channel_ids[0]}`,
        screenPixelDensity: 1,
        platform: "DESKTOP",
        clientFormFactor: "UNKNOWN_FORM_FACTOR",
        browserName: "Chrome",
        screenWidthPoints: window.innerWidth,
        screenHeightPoints: window.innerHeight,
        userInterfaceTheme: "USER_INTERFACE_THEME_LIGHT",
        connectionType: "CONN_CELLULAR_4G",
        mainAppWebInfo: {
          graftUrl: `https://www.youtube.com/channel/${channel_ids[0]}`,
          pwaInstallabilityStatus: "PWA_INSTALLABILITY_STATUS_CAN_BE_INSTALLED",
          webDisplayMode: "WEB_DISPLAY_MODE_BROWSER",
          isWebNativeShareAvailable: false,
        },
      },
      user: { lockedSafetyMode: false },
      request: {
        useSsl: true,
        internalExperimentFlags: [],
        consistencyTokenJars: [],
      },
    },
    channelIds: channel_ids,
  };

  const response = await fetch(url, {
    method: "POST",
    headers: {
      authorization,
      "Content-Type": "application/json",
      "x-origin": "https://www.youtube.com",
    },
    body: JSON.stringify(body),
  });

  const res = await response.json();
  console.log("KahfTubeUnsubscribeInterface:: response.body:",JSON.stringify(response.body));
  if (!response.ok) {
    //await window.flutter_inappwebview.callHandler("getHaramChannel", false);
    console.log("KahfTubeUnsubscribeInterface:: response:",false);
    await KahfTubeUnsubscribeInterface.responseCallback(false);
  }
  else{
    console.log("KahfTubeUnsubscribeInterface:: response:",true);
    await KahfTubeUnsubscribeInterface.responseCallback(true);
  }
  //await window.flutter_inappwebview.callHandler("getHaramChannel", true);

}
unsubscribe_channel();
