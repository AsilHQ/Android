if (!Array.prototype.last) {
  Array.prototype.last = function () {
    return this[this.length - 1];
  };
}

const restrictionImageUrl =
  "http://localhost:8080/assets/images/img_do_not_enter.jpeg";
const loadingImageUrl = "http://localhost:8080/assets/images/loading.gif";
const cautionImageUrl = "http://localhost:8080/assets/images/caution.png";

let isSubscriptionClicked = false;
let isElementClicked = false;
let mode;
let gender;
let token;

let channels = {};
let length = 0;

let allChannels =
  ytInitialData.contents.singleColumnBrowseResultsRenderer.tabs[0].tabRenderer.content.sectionListRenderer.contents[0].itemSectionRenderer.contents.map(
    (e) => {
      return {
        id: e.channelListItemRenderer.channelId,
        name: e.channelListItemRenderer.title.runs[0].text,
        isUnsubscribed: false,
        thumbnail: `https:${e.channelListItemRenderer.thumbnail.thumbnails[0].url}`,
        isHaram: false,
      };
    }
  );
allChannels = allChannels ?? [];

// console.log(JSON.stringify(allChannels));

function check_gender(response_gender, gender) {
  if (response_gender == 1) return true;
  if (response_gender == 4) return true; //Kids items are halal for both male and female.
  return response_gender == gender;
}

function check_mode(response_mode, mode) {
  switch (mode) {
    case 2:
      return true;
    case 3:
      return response_mode == 3 || response_mode == 1;
    case 1:
      return response_mode === 1;
    default:
      return false;
  }
}

function can_see(response) {
  return (
    check_gender(response.permissible_for.value, gender) &&
    check_mode(response.practicing_level.value, mode)
  );
}

async function canSeee(responsee) {
  if (responsee["type"]) {
    return true;
  }
  return can_see(responsee);
}

async function getParamsBasedOnResponse(response) {
  if (response == 404) {
    return {
      imageUrl: cautionImageUrl,
      action: "",
    };
  } else if (response?.is_halal) {
    if (await canSeee(response)) {
      return {
        action: "",
      };
    } else {
      return {
        imageUrl: restrictionImageUrl,
        action: "none",
      };
    }
  } else if (response == "loading") {
    return {
      imageUrl: loadingImageUrl,
      action: "none",
    };
  } else {
    return {
      imageUrl: restrictionImageUrl,
      action: "none",
    };
  }
}

// new MutationObserver(async (mutationList, observer) => {
//   if (!mode || !gender) {
//     const pref = await window.flutter_inappwebview.callHandler("pref");
//     mode = pref["mode"];
//     gender = pref["gender"];
//     token = pref["token"];
//   }

//   const channelList = document.querySelectorAll("div.compact-media-item");
//   if (channelList.length) {
//     length = channelList.length;
//     for (let index = 0; index < channelList.length; index++) {
//       const element = channelList[index];
//       const metadata = element.querySelector(
//         "a.compact-media-item-metadata-content"
//       );
//       const href = metadata.getAttribute("href");
//       if (!channels[href]) {
//         channels[href] = {
//           isUnsubscribed: false,
//           thumbnail: `https:${element.querySelector("img")?.lazyData}`,
//           name: metadata?.children?.item(0)?.textContent,
//           subscribers: metadata?.children?.item(1)?.children?.item(0)
//             ?.textContent,
//           videos: metadata?.children?.item(1)?.children?.item(1)?.textContent,
//           isHaram: false,
//         };
//       }
//     }
//     // console.log(JSON.stringify(channels));
//   }

//   const channelListOpt = document.querySelectorAll("a.channel-list-item-link");
//   if (channelListOpt.length) {
//     length = channelListOpt.length;
//     for (let index = 0; index < channelListOpt.length; index++) {
//       const element = channelListOpt[index];
//       const href = element.getAttribute("href");
//       if (!channels[href]) {
//         channels[href] = {
//           isUnsubscribed: false,
//           thumbnail: `https:${element.querySelector("img")?.lazyData}`,
//           name: element?.children?.item(1)?.textContent,
//           isHaram: false,
//         };
//       }
//     }
//     // console.log(JSON.stringify(channels));
//   }
// }).observe(document, {
//   childList: true,
//   subtree: true,
// });

// setTimeout(() => {
//   if (Object.keys(channels).length == 0) {
//     window.flutter_inappwebview.callHandler("getChannels");
//   }
// }, 5000);

// const id = setInterval(async () => {
//   let channelsLength = Object.keys(channels).length;
//   if (channelsLength != 0) {
//     if (channelsLength == length) {
//       clearInterval(id);
//       const channelIds = Object.keys(channels).map((key) => {
//         let id = key.split("/").last();
//         if (id.startsWith("@")) {
//           id = id.replace("@", "");
//         }
//         return id;
//       });
//       const res = await fetch(
//         "https://api.kahf.ai/api/v1/channels?ids[]=" +
//           channelIds.join("&ids[]="),

//         {
//           headers: {
//             "Content-Type": "application/json",
//             Accept: "application/json",
//             Authorization: `Bearer ${token}`,
//           },
//         }
//       );

//       const response = await res.json();
//       // console.log(JSON.stringify(response));

//       for (const href of Object.keys(channels)) {
//         // console.log(href);
//         const fIndex = response.data?.findIndex(
//           (el) =>
//             href.toLowerCase().includes(el.id) ||
//             href.toLowerCase().includes(el["custom_url"]?.toLowerCase()) ||
//             href.toLowerCase().includes(el["title"]?.toLowerCase())
//         );
//         // console.log(fIndex);
//         if (fIndex > -1) {
//           const { imageUrl } = await getParamsBasedOnResponse(
//             response.data[fIndex]
//           );
//           channels[href]["isHaram"] = imageUrl == restrictionImageUrl;
//         }
//       }

//       // console.log(JSON.stringify(channels));

//       const value = await window.flutter_inappwebview.callHandler(
//         "getChannels",
//         channels
//       );
//     }
//   }
// }, 1000);

(async () => {
  const pref = await window.flutter_inappwebview.callHandler("pref");
  mode = pref["mode"];
  gender = pref["gender"];
  token = pref["token"];

  const channelIds = allChannels.map((e) => e.id);
  const res = await fetch(
    "https://api.kahf.ai/api/v1/channels?ids[]=" + channelIds.join("&ids[]="),

    {
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
        Authorization: `Bearer ${token}`,
      },
    }
  );

  const response = await res.json();
  // console.log("------LOL-------");
  // console.log(JSON.stringify(response));

  for (const element of allChannels) {
    // console.log(href);
    const fIndex = response.data?.findIndex((el) => element.id.includes(el.id));
    // console.log(fIndex);
    if (fIndex > -1) {
      const { imageUrl } = await getParamsBasedOnResponse(
        response.data[fIndex]
      );
      element["isHaram"] = imageUrl == restrictionImageUrl;
    }
  }

  // console.log(JSON.stringify(channels));

  const value = await window.flutter_inappwebview.callHandler(
    "getChannels",
    allChannels
  );
})();
